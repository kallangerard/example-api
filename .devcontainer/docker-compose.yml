version: '3.8'

services:
  devcontainer:
      build:
        context: ..
        dockerfile: .devcontainer/Dockerfile
        args:
          # Update 'VARIANT' to pick a version of Python: 3, 3.10, 3.9, 3.8, 3.7, 3.6
          # Append -bullseye or -buster to pin to an OS version.
          # Use -bullseye variants on local arm64/Apple Silicon.
          VARIANT: 3-bullseye
          # Optional Node.js version to install
          NODE_VERSION: "lts/*"
      volumes:
        - ..:/workspace:delegated
      command: sleep infinity
      # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
      network_mode: service:db

  db:
    image: postgres:12
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres

  # node_dev:
  #   extends:
  #     file: docker-compose.yml
  #     service: node
  #   ports:
  #     - "3000:3000"
  #   env_file: .env.dev

  # node:
  #   image: node:16
  #   user: app
  #   volumes:
  #     - /workspaces/example-api-grpc:/app
  #   command: ${COMPOSE_COMMAND:-bash}

  # python:
  #   build:
  #     context: .
  #     dockerfile: api.dev.Dockerfile
  #   user: app
  #   volumes:
  #     - ./workspaces/example-api-grpc:/app
  #     - ./Makefile:/opt/app/Makefile:ro
  #   command: ${COMPOSE_COMMAND:-bash}

volumes:
  postgres-data:
